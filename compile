#!/bin/sh
set -e
start_time=""
end_time=""

_compile_obj(){
	extra_flag=""
	printf "Compiling $1 ($2)..."
	basename=$(echo $1 | cut -d. -f1)
	if [ -f obj/$basename-$2.o ]; then
		echo "Already Built."
		return 0
	else
		if [ "$2" = "shared" ]; then
			extra_flag="-fPIC"
		fi

		$CC -c $extra_flag -Iinclude src/$1 -o obj/$basename-$2.o $CFLAGS
		echo "Done."
	fi
}

_runtime_calc(){
	set +e
	case $1 in
		start)
			start_time="$(date +%s)"
			printf "Operation started at $(date --date=@$start_time)\n\n"
			;;
		stop)
			end_time="$(date +%s)"
			runtime="$(expr $end_time - $start_time)"
			hours="$(expr $runtime / 3600)"
			minutes=0
			printf "Operation took "

			if [ $hours -ne 0 ]; then
				printf "$hours hours"
				runtime="$(expr $runtime - $(expr $hours '*' 3600))"
				if [ $runtime -gt 60 ]; then
					printf ", "
				else
					printf " and "
				fi
			fi
			minutes="$(expr $runtime / 60)"

			if [ $minutes -ne 0 ]; then
				printf "$minutes minutes and "
				runtime="$(expr $runtime - $(expr $minutes '*' 60))"
			fi

			echo "$runtime seconds to complete"
			;;
	esac
	set -e
}

compile_static_lib(){
	mkdir obj -p

	for i in $src; do
		_compile_obj $i "static"
	done
	printf "Creating static library $1..."
	$AR rc lib$libname.a $(find obj | grep static) 2>&1 >/dev/null
	echo "Done."
}

compile_shared_lib(){
	mkdir obj -p

	for i in $src; do
		_compile_obj $i "shared"
	done
	printf "Creating shared library $1..."
	$CC -shared $(find obj | grep shared) -o lib$libname.so $CFLAGS
	echo "Done."
	rm *.o -f
}

compile_lib(){
	compile_static_lib
	compile_shared_lib
}

compile_test(){
	printf "Compiling test program $libtest..."
	$CC --static -Iinclude -L. -l$libname $CFLAGS  $libtest.c -o $libtest.out
	echo "Done."
}

install_lib(){
	printf "Installing library $LIBNAME..."
	cp include/* "$prefix/include"
	mv * "$prefix/lib"
	echo "Done."
}

printf "PocketLinux32's Generic C Library Build System v0.04\n\n"

case $1 in
	--clean)
		rm obj *.out *.a *.so core* .config -rf
		echo "Project directory has been cleaned"
		exit 0
		;;
	--build)
		action="compile_$2"
		;;
	--install)
		action="install_lib"
		;;
	--help)
		echo "--clean			Removes any files generated during compilation"
		echo "--build [action]	Compiles the library or the library testcase"
		echo "--install		Installs the compiled library to dest"
		exit 0
		;;
esac

if [ ! -f ".config" ]; then
	echo "Error: You haven't configured the system yet! Please run ./configure --help and try again"
	exit 1
fi
. ./.config

echo "Compiler: $CC"
echo "Compiler Flags: $CFLAGS"
echo "Build Type: $BUILD"

_runtime_calc start
$action
_runtime_calc stop


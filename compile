#!/bin/sh
set -e
start_time=""
end_time=""
static=1
shared=1

if [ "$CC" = "" ]; then
	CC="cc"
fi

if [ "$AR" = "" ]; then
	AR="ar"
fi

_compile_obj(){
	extra_flag=""
	printf "Compiling $1 ($2)..."
	basename=$(echo $1 | cut -d. -f1)
	if [ -f obj/$basename-$2.o ]; then
		echo "Already Built."
		return 0
	else
		if [ "$2" = "shared" ]; then
			extra_flag="-fPIC"
		fi

		$CC -c $extra_flag -Iinclude src/$1 -o obj/$basename-$2.o $CFLAGS
		echo "Done."
	fi
}

_runtime_calc(){
	set +e
	case $1 in
		start)
			start_time="$(date +%s)"
			printf "Operation started at $(date --date=@$start_time)\n\n"
			;;
		stop)
			end_time="$(date +%s)"
			runtime="$(expr $end_time - $start_time)"
			hours="$(expr $runtime / 3600)"
			minutes=0
			printf "Operation took "

			if [ $hours -ne 0 ]; then
				printf "$hours hours"
				runtime="$(expr $runtime - $(expr $hours '*' 3600))"
				if [ $runtime -gt 60 ]; then
					printf ", "
				else
					printf " and "
				fi
			fi
			minutes="$(expr $runtime / 60)"

			if [ $minutes -ne 0 ]; then
				printf "$minutes minutes and "
				runtime="$(expr $runtime - $(expr $minutes '*' 60))"
			fi

			echo "$runtime seconds to complete"
			;;
	esac
	set -e
}

compile_lib(){
	mkdir obj -p
	src_list=$(ls src | grep '.c')
	if [ -f custom_checks ]; then
		printf "Running custom checks..."
		. ./custom_checks
		echo "Done."
	fi

	if [ $static -ne 0 ]; then
		for i in $src_list; do
			_compile_obj $i "static"
		done
		printf "Creating static library $1..."
		$AR rc $1.a $(find obj | grep static) 2>&1 >/dev/null
		echo "Done."
	fi

	if [ $shared -ne 0 ]; then
		for i in $(ls src | grep '.c'); do
			_compile_obj $i "shared"
		done
		printf "Creating shared library $1..."
		$CC -shared $(find obj | grep shared) -o $1.so $CFLAGS
		echo "Done."
		rm *.o -f
	fi
}

compile_test(){
	printf "Compiling test program $1..."
	$CC --static -Iinclude -L. $LDFLAGS  $1.c -o $1.out $2 $CFLAGS -w
	echo "Done."
}

install_lib(){
	printf "Installing library $1..."
	cp include/* "$2/include"
	mv $1.* "$2/lib"
	echo "Done."
}

printf "PocketLinux32's Generic C Library Build System v0.03\n\n"
case $1 in
	--clean)
		rm obj *.out *.a *.so core* -rf
		echo "Project directory has been cleaned"
		exit 0
		;;

	--build)
		action=$2
		;;
	--install)
		_runtime_calc start
		install_lib libpl32 $(realpath "$2")
		_runtime_calc stop
		exit 0
		;;
	--help)
		echo "--clean			Removes any files generated during compilation"
		echo "--build [action]	Compiles the library or the library testcase"
		echo "--install [dest]	Installs the compiled library to dest"
		exit 0
		;;
esac

if [ "$action" = "lib" ]; then
	opts="libpl32"
	if [ "$3" = "no-static" ]; then
		static=0
	elif [ "$3" = "no-shared" ]; then
		shared=0
	fi
elif [ "$action" = "test" ]; then
	opts="pl32-test -lpl32"
fi

_runtime_calc start
compile_$action $opts
_runtime_calc stop

